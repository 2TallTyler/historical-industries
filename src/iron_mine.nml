// Begin Iron Mine

spritelayout sprlay_iron_mine_00 {ground{sprite:2325;}}
spritelayout sprlay_iron_mine_01 {ground{sprite:2326;}}
spritelayout sprlay_iron_mine_02 {ground{sprite:2327;}}
spritelayout sprlay_iron_mine_03 {ground{sprite:2328;}}

spritelayout sprlay_iron_mine_10 {ground{sprite:2329;}}
spritelayout sprlay_iron_mine_11 {ground{sprite:2330;}}
spritelayout sprlay_iron_mine_12 {ground{sprite:2331;}}
spritelayout sprlay_iron_mine_13 {ground{sprite:2332;}}

spritelayout sprlay_iron_mine_20 {ground{sprite:2333;}}
spritelayout sprlay_iron_mine_21 {ground{sprite:2334;}}
spritelayout sprlay_iron_mine_22 {ground{sprite:2335;}}
spritelayout sprlay_iron_mine_23 {ground{sprite:2336;}}

spritelayout sprlay_iron_mine_30 {ground{sprite:2337;}}
spritelayout sprlay_iron_mine_31 {ground{sprite:2338;}}
spritelayout sprlay_iron_mine_32 {ground{sprite:2339;}}
spritelayout sprlay_iron_mine_33 {ground{sprite:2340;}}



// Location Check: Must be within 8 tiles of a town boundary (town zones, not town sign) with population >= 300

switch (FEAT_INDUSTRIES, PARENT, switch_iron_mine_location_check_3, population >= 300) {1: return CB_RESULT_LOCATION_ALLOW; return string(STR_CB_RESULT_NOT_NEAR_TOWN_POP_300);} // Check if town has population >= 300
switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_location_check_2, town_euclidean_dist(0,0) <= LOAD_TEMP(0)+64) {1: return CB_RESULT_LOCATION_ALLOW; return string(STR_CB_RESULT_NOT_NEAR_TOWN_POP_300);} // Add 8 to the town zone radii and check if the distance to the town sign is smaller than that radius. The town zone radii and distance check use the square of the distance, thus 64 = 8 tiles. 
switch (FEAT_INDUSTRIES, PARENT, switch_iron_mine_location_check_1, STORE_TEMP(town_zone_0_radius_square + town_zone_1_radius_square + town_zone_2_radius_square + town_zone_3_radius_square + town_zone_4_radius_square, 0)) {switch_iron_mine_location_check_2;} // Add up the town zone radii and store it in temporary register 0

/*
item (FEAT_INDUSTRIES, industry_iron_mine) {
	property {
		substitute:				INDUSTRYTYPE_IRON_ORE_MINE;
		override:				INDUSTRYTYPE_IRON_ORE_MINE;
		life_type:				IND_LIFE_TYPE_EXTRACTIVE;
		cargo_types:			[
								produce_cargo("IORE",1),
		];
		name:					string(STR_NAME_IRON_MINE);
		prob_map_gen:			5;
		prob_in_game:			2;
		fund_cost_multiplier:	100;
		layouts:				[industry_layout_iron_mine,];
	}
	graphics {
		//location_check:			switch_iron_mine_location_check_0;
		construction_probability:	(current_year >= 1856) ? CB_RESULT_IND_PROBABILITY_FROM_PROPERTY : 0;
	}
}
*/
switch (FEAT_OBJECTS, SELF, switch_object_graphics_iron_mine, relative_pos) {
	relative_coord(0,0): sprlay_iron_mine_00;
	relative_coord(0,1): sprlay_iron_mine_01;
	relative_coord(0,2): sprlay_iron_mine_02;
	relative_coord(0,3): sprlay_iron_mine_03;
	
	relative_coord(1,0): sprlay_iron_mine_10;
	relative_coord(1,1): sprlay_iron_mine_11;
	relative_coord(1,2): sprlay_iron_mine_12;
	relative_coord(1,3): sprlay_iron_mine_13;
	
	relative_coord(2,0): sprlay_iron_mine_20;
	relative_coord(2,1): sprlay_iron_mine_21;
	relative_coord(2,2): sprlay_iron_mine_22;
	relative_coord(2,3): sprlay_iron_mine_23;
	
	relative_coord(3,0): sprlay_iron_mine_30;
	relative_coord(3,1): sprlay_iron_mine_31;
	relative_coord(3,2): sprlay_iron_mine_32;
	relative_coord(3,3): sprlay_iron_mine_33;
}

item (FEAT_OBJECTS, object_item_iron_mine) {
	property {
		class:					"HSIN";
		classname:				string(STR_NAME_OBJECT_MENU);
		name:					string(STR_NAME_IRON_MINE);
		climates_available:		ALL_CLIMATES;
		build_cost_multiplier:	0;
		remove_cost_multiplier:	0;
		size:					[4,4];
		introduction_date:		1856;
		num_views:				1;
	}
	graphics {
		default:				switch_object_graphics_iron_mine;
	}
}

// End Iron Mine