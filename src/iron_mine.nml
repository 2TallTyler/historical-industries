// Begin Iron Mine

spritelayout sprlay_iron_mine_00 {ground{sprite:2325;}}
spritelayout sprlay_iron_mine_01 {ground{sprite:2326;}}
spritelayout sprlay_iron_mine_02 {ground{sprite:2327;}}
spritelayout sprlay_iron_mine_03 {ground{sprite:2328;}}

spritelayout sprlay_iron_mine_10 {ground{sprite:2329;}}
spritelayout sprlay_iron_mine_11 {ground{sprite:2330;}}
spritelayout sprlay_iron_mine_12 {ground{sprite:2331;}}
spritelayout sprlay_iron_mine_13 {ground{sprite:2332;}}

spritelayout sprlay_iron_mine_20 {ground{sprite:2333;}}
spritelayout sprlay_iron_mine_21 {ground{sprite:2334;}}
spritelayout sprlay_iron_mine_22 {ground{sprite:2335;}}
spritelayout sprlay_iron_mine_23 {ground{sprite:2336;}}

spritelayout sprlay_iron_mine_30 {ground{sprite:2337;}}
spritelayout sprlay_iron_mine_31 {ground{sprite:2338;}}
spritelayout sprlay_iron_mine_32 {ground{sprite:2339;}}
spritelayout sprlay_iron_mine_33 {ground{sprite:2340;}}

item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_00) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_00;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_01) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_01;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_02) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_02;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_03) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_03;}}

item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_10) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_10;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_11) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_11;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_12) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_12;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_13) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_13;}}

item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_20) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_20;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_21) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_21;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_22) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_22;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_23) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_23;}}

item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_30) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_30;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_31) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_31;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_32) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_32;}}
item (FEAT_INDUSTRYTILES, ind_tile_iron_mine_33) {
property {substitute:	02; accepted_cargos: [[PASS, 8]];}
graphics {default:		sprlay_iron_mine_33;}}

tilelayout industry_layout_iron_mine {
	0,0:	ind_tile_iron_mine_00;	0,1:	ind_tile_iron_mine_01;	0,2:	ind_tile_iron_mine_02;	0,3:	ind_tile_iron_mine_03;
	1,0:	ind_tile_iron_mine_10;	1,1:	ind_tile_iron_mine_11;	1,2:	ind_tile_iron_mine_12;	1,3:	ind_tile_iron_mine_13;
	2,0:	ind_tile_iron_mine_20;	2,1:	ind_tile_iron_mine_21;	2,2:	ind_tile_iron_mine_22;	2,3:	ind_tile_iron_mine_23;
	3,0:	ind_tile_iron_mine_30;	3,1:	ind_tile_iron_mine_31;	3,2:	ind_tile_iron_mine_32;	3,3:	ind_tile_iron_mine_33;
}

// Iron Mine Industry

// If an odd number of industries exist, then must build within 100 tiles of another iron mine
switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_cluster_2, industry_distance(industry_iron_mine, -1) <= 100) {1: CB_RESULT_LOCATION_ALLOW; CB_RESULT_LOCATION_DISALLOW;}

// Check if an even number ofironl mines already exist on the map (0 is even) by dividing by 2 and checking for a remainder. If even, build without needing cluster. If odd, continue to next switch for clustering
switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_cluster_1, industry_count(industry_iron_mine, -1) % 2 == 0) {1: return CB_RESULT_LOCATION_ALLOW; switch_iron_mine_cluster_2;}

// Disable clustering if smallest map edge is < 512 (clustering doesn't work well on small maps)
switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_cluster_0, map_min_edge >= 512) {1: switch_iron_mine_cluster_1; CB_RESULT_LOCATION_ALLOW;}


switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_location_check_5, industry_distance(industry_steel_mill,-1) >= 60 && industry_distance(industry_farm,-1) >= 30 && industry_distance(industry_logging_camp,-1) >= 30) {1: switch_iron_mine_cluster_0; CB_RESULT_LOCATION_DISALLOW;} // Don't allow construction within 60 tiles (Manhattan) of steel mill, or 30 tiles of farm or logging camp
switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_location_check_3, town_euclidean_dist(0,0) >= LOAD_TEMP(0)+400) {1: switch_iron_mine_location_check_5; return CB_RESULT_LOCATION_DISALLOW;} // Add 20 to the town zone radii and check if the distance to the town sign is larger than that radius. The town zone radii and distance check use the square of the distance, thus 64 = 8 tiles. 
switch (FEAT_INDUSTRIES, PARENT, switch_iron_mine_location_check_2, STORE_TEMP(town_zone_0_radius_square + town_zone_1_radius_square + town_zone_2_radius_square + town_zone_3_radius_square + town_zone_4_radius_square, 0)) {switch_iron_mine_location_check_3;} // Add up the town zone radii and store it in temporary register 0


/*	Slot Reservations - all industries */

// Compare how many industries are currently on the map with the target number, scaled to the map size from a "normal" 256 x 256 map. If less than the target number, proceed to town distance checks, otherwise disallow construction.
switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_density_high,
	industry_count(industry_iron_mine, -1) < 12 * (map_x_edge / 256) * (map_y_edge / 256)) 
	{1: switch_iron_mine_location_check_2; return CB_RESULT_LOCATION_DISALLOW;}

switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_density_normal,
	industry_count(industry_iron_mine, -1) < 6 * (map_x_edge / 256) * (map_y_edge / 256)) 
	{1: switch_iron_mine_location_check_2; return CB_RESULT_LOCATION_DISALLOW;}

switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_density_low,
	industry_count(industry_iron_mine, -1) < 3 * (map_x_edge / 256) * (map_y_edge / 256)) 
	{1: switch_iron_mine_location_check_2; return CB_RESULT_LOCATION_DISALLOW;}

switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_density_verylow,
	industry_count(industry_iron_mine, -1) < 1 * (map_x_edge / 256) * (map_y_edge / 256)) 
	{1: switch_iron_mine_location_check_2; return CB_RESULT_LOCATION_DISALLOW;}

// Get the selected industry density from parameter and redirect to the appropriate switch
switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_density_selector, param_industry_density) {
	0: switch_iron_mine_density_verylow;
	1: switch_iron_mine_density_low;
	2: switch_iron_mine_density_normal;
	3: switch_iron_mine_density_high;
}

/*
Industry Totals on 256 x 256 map:

	Industry			Very Low (10)	Low (25)	Normal (55)		High (80)
	Oil Wells			1				3			8				12
	Farm				1				5			12				12
	Lumber Camp			1				3			8				12
	Coal Mine			1				3			6				12
	Iron Mine			1				3			6				12
	Steel Mill			1				1			1				2
	Factory				1				3			6				7
	Paper Mill			1				1			1				2
	Oil Refinery		1				1			1				2
	Power Plant			0				1			3				3
	Recycling Center	1				1			3				4
*/

// Prospected industries aren't restricted by industry totals, but must meet other requirements
switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_allow_prospected, extra_callback_info2 == IND_CREATION_PROSPECT || game_mode == GAMEMODE_EDITOR)
	{1: switch_iron_mine_location_check_2; switch_iron_mine_density_selector;}

// Funded industries have no restrictions
switch (FEAT_INDUSTRIES, SELF, switch_iron_mine_allow_funded, extra_callback_info2 == IND_CREATION_FUND) 
	{1: return CB_RESULT_LOCATION_ALLOW; switch_iron_mine_allow_prospected;}

item (FEAT_INDUSTRIES, industry_iron_mine, 3) {
	property {
		substitute:				INDUSTRYTYPE_IRON_ORE_MINE;
		life_type:				IND_LIFE_TYPE_EXTRACTIVE;
		cargo_types:			[
								produce_cargo("IORE",15),
								accept_cargo("PASS"),
								produce_cargo("PASS",8),
		];
		name:					TTD_STR_INDUSTRY_NAME_IRON_ORE_MINE;
		nearby_station_name:	string(STR_STATION, string(STR_TOWN), string(STR_NAME_IRON_MINE));
		prob_map_gen:			15;
		prob_in_game:			15;
		fund_cost_multiplier:	100;
		layouts:				[industry_layout_iron_mine,];
		conflicting_ind_types:	[industry_steel_mill];
	}
	graphics {
		location_check:			switch_iron_mine_allow_funded;
		construction_probability:	(current_year >= 1856) ? 1 : 0;
		extra_text_fund:		string(STR_FUND_AVAILABLE_1856);
	}
}

// Iron Mine Objects

switch (FEAT_OBJECTS, SELF, switch_object_graphics_iron_mine, relative_pos) {
	relative_coord(0,0): sprlay_iron_mine_00;
	relative_coord(0,1): sprlay_iron_mine_01;
	relative_coord(0,2): sprlay_iron_mine_02;
	relative_coord(0,3): sprlay_iron_mine_03;
	
	relative_coord(1,0): sprlay_iron_mine_10;
	relative_coord(1,1): sprlay_iron_mine_11;
	relative_coord(1,2): sprlay_iron_mine_12;
	relative_coord(1,3): sprlay_iron_mine_13;
	
	relative_coord(2,0): sprlay_iron_mine_20;
	relative_coord(2,1): sprlay_iron_mine_21;
	relative_coord(2,2): sprlay_iron_mine_22;
	relative_coord(2,3): sprlay_iron_mine_23;
	
	relative_coord(3,0): sprlay_iron_mine_30;
	relative_coord(3,1): sprlay_iron_mine_31;
	relative_coord(3,2): sprlay_iron_mine_32;
	relative_coord(3,3): sprlay_iron_mine_33;
}

item (FEAT_OBJECTS, object_item_iron_mine) {
	property {
		class:					"HSIN";
		classname:				string(STR_NAME_OBJECT_MENU);
		name:					TTD_STR_INDUSTRY_NAME_IRON_ORE_MINE;
		climates_available:		ALL_CLIMATES;
		build_cost_multiplier:	0;
		remove_cost_multiplier:	0;
		size:					[4,4];
		introduction_date:		1856;
		num_views:				1;
	}
	graphics {
		default:				switch_object_graphics_iron_mine;
	}
}

// End Iron Mine